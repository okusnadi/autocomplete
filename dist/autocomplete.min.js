!function(e,t){t.module("ng-addons.autocomplete",["ng-addons.autocomplete.tpls"]).directive("nga-autocomplete",function(){return{restrict:"EA",require:"^ngModel",templateUrl:"template/autocomplete.html",scope:{ngModel:"=",autocompleteText:"=",displayValue:"@",autocompleteConfig:"=",matchCallback:"&"},link:function(e,o,l,n){var i={minlength:3,delay:500,placeholder:"Search..."};if(e.config=t.copy(i),e.autocompleteConfig)for(var c in e.autocompleteConfig)if(void 0!==e.config[c]){var a=e.autocompleteConfig[c];e.config[c]=a}},controller:["$scope","$interval",function(e,t){e.items=[],e.selected=!1;var o=function(){e.items=[]};e.selectItem=function(l){e.ngModel=l,e.autocompleteText=void 0!==e.ngModel[e.displayValue]?e.ngModel[e.displayValue]:e.ngModel,o(),t(function(){e.selected=!0},50,3)},e.closeAutocomplete=function(){o()},e.$watch("autocompleteText",function(t,l){t!==l&&t.length>=e.config.minlength?(e.selected=!1,e.matchCallback({value:t}).then(function(t){e.items=t})):t||(e.ngModel=null,o())})}]}}).directive("outsideClick",["$document","$parse",function(e,t){return{link:function(t,o,l,n){var i=l.outsideClick,c=function(e){var l=o.find(e.target).length>0;l||t.$apply(i)};e.on("click",c),o.on("$destroy",function(){e.off("click",c)})}}}]),t.module("ng-addons.autocomplete.tpls",[]).run(["$templateCache",function(e){e.put("template/autocomplete.html",'<div class="autocomplete-container" outside-click="closeAutocomplete()"><div><input type="text" class="form-control" name="autocomplete" placeholder="{{ config.placehoder || \'\' }}" ng-model="autocompleteText" ng-model-options="{\'debounce\': config.delay}" /></div><div class="items-container" ng-show="items.length > 0 && !selected"><div class="list-group items-found"><a class="list-group-item" style="cursor:pointer;" ng-repeat="item in items" ng-click="selectItem(item)">{{ item[displayValue] !== undefined ? item[displayValue] : item }}</a></div></div></div>')}])}(window,angular);